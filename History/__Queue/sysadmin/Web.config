<?xml version="1.0"?>
<!-- 
    注意: 除了手动编辑此文件以外，您还可以使用 
    Web 管理工具来配置应用程序的设置。可以使用 Visual Studio 中的
     “网站”->“Asp.Net 配置”选项。
    设置和注释的完整列表在 
    machine.config.comments 中，该文件通常位于 
    \Windows\Microsoft.Net\Framework\v2.x\Config 中
-->
<configuration>
	<appSettings>
		<!-- 公司名称 -->
		<add key="CompanyName" value="天智海科技"/>
		<!-- cookie过期延迟时间，小时为单位，空或者小于等于0表示浏览器关闭则过期 -->
		<add key="CookieTime" value="0"/>
		<!-- 
      如果删除只是对表字段的修改，那么请配置下面的DeleteFlag为需要修改的字段名，DeleteValue为标记记录是删除记录的值，要求每个表的删除字段名都一致
      如果DeleteValue是个字符串类型，则需要加上单引号，如：value="'delete'"
     --> 
    <add key="DeleteFlag" value="isdelete"/>
    <add key="DeleteValue" value="1"/>
    
		<!-- 
      数据库类型 Sql/Access 
      
      注意，如果修改数据库类型，相应的connectionStrings中的数据库连接字符串也要做修改
    -->
		<add key="dbType" value="access"/>
		<!-- 上传图片保存路径 -->
		<add key="savefile[img]" value="~/upload/"/>
		<!-- 允许上传的图片格式，每个格式用英文逗号（,）进行分割 -->
		<add key="file[img]" value=".jpg,.gif,.jpeg,.bmp,.png"/>
		<!-- 上传文件保存路径 -->
		<add key="savefile[file]" value="~/upload/"/>
		<!-- 允许上传的文件格式，每个格式用英文逗号（,）进行分割 -->
		<add key="file[file]" value=".doc,.txt,.xls,.docx,.xlsx"/>
		<!-- 无限制上传文件保存路径 -->
		<add key="savefile[other]" value="~/upload/"/>
		<!-- 后台异常错误显示页面 -->
		<!--
      <add key="ErrShow" value="~/sysadmin/error.htm"/>
    -->
	</appSettings>
	<connectionStrings>
		<!--
      access类型连接字符串
      access数据库建议名称使用#开头，如#db.mdb
      这样可以防止通过url下载数据库
    -->
		<add name="ConnectionString" connectionString="Provider=Microsoft.Jet.OLEDB.4.0;Data Source=|DataDirectory|\#.mdb;"/>
		<!-- sql类型连接字符串 -->
		<!--
      注意：DBHelper.dll会自动读取配置文件中ConnectionString节点的内容
      
      如果你的数据库连接字符串节点不叫ConnectionString，那么请在网站上添加一个Global.asax（全局应用程序类）文件
      然后在Application_Start中添加语句：
      DBHelper.SQLHelper.ConfigKey = "这里填写你的节点名字"
      或
      DBHelper.OLEDBHelper.ConfigKey = "这里填写你的节点名字"
      （如果是应用程序，就直接在启动窗体第一加载的时候添加或者program文件中添加）
      
      如果你的数据库连接字符串没有配置在web.config文件中，那么请设置相应类的ConnectionString属性为连接字符串的值
    -->
		<!--<add name="ConnectionString" connectionString="Persist Security Info=False;Integrated Security=false;database=db;server=.;User ID=sa;password=;Connect Timeout=5;"/-->
	</connectionStrings>
	<system.web>
		<httpRuntime maxRequestLength="409600" executionTimeout="3600"/>
		<!-- mvc模式或者vs2010请开启此节点，否则有编辑器的页面ValidateRequest="false"失效
        <httpRuntime requestValidationMode="2.0" />
        -->
		<!-- 
            设置 compilation debug="true" 将调试符号插入
            已编译的页面中。但由于这会 
            影响性能，因此只在开发过程中将此值 
            设置为 true。
        -->
		<compilation debug="true">
			<assemblies>
        <!-- 以下节点请勿删除 -->
				<add assembly="MySql.Data, Version=5.0.8.1, Culture=neutral, PublicKeyToken=C5687FC88969C44D"/>
				<add assembly="System.Data.OracleClient, Version=2.0.0.0, Culture=neutral, PublicKeyToken=B77A5C561934E089"/>
				<add assembly="System.Transactions, Version=2.0.0.0, Culture=neutral, PublicKeyToken=B77A5C561934E089"/>
				<add assembly="System.Configuration.Install, Version=2.0.0.0, Culture=neutral, PublicKeyToken=B03F5F7F11D50A3A"/></assemblies></compilation>
		<!--
            通过 <authentication> 节可以配置 ASP.NET 使用的 
            安全身份验证模式，
            以标识传入的用户。 
        -->
		<authentication mode="Windows"/>
		<!--
            如果在执行请求的过程中出现未处理的错误，
            则通过 <customErrors> 节可以配置相应的处理步骤。具体说来，
            开发人员通过该节可以配置
            要显示的 html 错误页
            以代替错误堆栈跟踪。

        <customErrors mode="RemoteOnly" defaultRedirect="GenericErrorPage.htm">
            <error statusCode="403" redirect="NoAccess.htm" />
            <error statusCode="404" redirect="FileNotFound.htm" />
        </customErrors>
        -->
	</system.web>
</configuration>
